steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--build-arg',
      'NEXT_PUBLIC_PROJECT_ID=${_NEXT_PUBLIC_PROJECT_ID}',
      '--build-arg',
      'OPENAI_API_KEY=${_OPENAI_API_KEY}',
      '--build-arg',
      'DATABASE_URL=${_DATABASE_URL}',
      '--build-arg',
      'TAVILY_API_KEY=${_TAVILY_API_KEY}',
      '-t',
      'europe-west3-docker.pkg.dev/${_PROJECT_ID}/${_SERVICE}/${_TAG}',
      '.'
    ]

  # Step 2: Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west3-docker.pkg.dev/${_PROJECT_ID}/${_SERVICE}/${_TAG}']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=europe-west3-docker.pkg.dev/${_PROJECT_ID}/${_SERVICE}/${_TAG}
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=europe-west3'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

# Optional: Specify substitutions for dynamic values
substitutions:
  _SERVICE: $SERVICE
  _PROJECT_ID: $PROJECT_ID
  _NEXT_PUBLIC_PROJECT_ID: $NEXT_PUBLIC_PROJECT_ID
  _OPENAI_API_KEY: $OPENAI_API_KEY
  _DATABASE_URL: $DATABASE_URL
  _TAVILY_API_KEY: $TAVILY_API_KEY
  _TAG: 'latest'
